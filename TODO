1. Diagonal View of a Binary Tree
2. Bottom View of a Binary Tree
3. BST Delete
4. LCA of Binary Tree (Path implementation + Parent pointer implementation)
5. LCA in n-ary Tree
6. Distance between two nodes in a Tree (go to lca, calc depths from lca and add)
7. Largest Element in BST <= n
8. Kth smallest Element in BST (kth Element of Inorder traversal)
9. Inorder successor and predecessor
11. Given a sorted array and a number k, check if there are 3 elements with sum k.
12. Max Non-Adjacent coins in Tree -> Re-implement
16. Min Range Radar -> check
17. No coins in a rectangle


Done. Job sequencing using Disjoint set
Done. Minimum Vertex Cover in a Tree
Done. All O(1) operations array
Done. LRU Cache
Done. Given a sorted array, count the number of triangles that can be made using any 3 elements in the array as sides. 
Done. Bipartite Graph check